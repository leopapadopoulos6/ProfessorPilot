{"ast":null,"code":"import { callExternalApi } from \"./external-api.service\";\nconst apiServerUrl = process.env.REACT_APP_API_SERVER_URL;\nexport const getPublicResource = async () => {\n  const config = {\n    url: `${apiServerUrl}/api/messages/public`,\n    method: \"GET\",\n    headers: {\n      \"content-type\": \"application/json\"\n    }\n  };\n  const {\n    data,\n    error\n  } = await callExternalApi({\n    config\n  });\n  return {\n    data: data || null,\n    error\n  };\n};\nexport const getProtectedResource = async accessToken => {\n  const config = {\n    url: `${apiServerUrl}/api/messages/protected`,\n    method: \"GET\",\n    headers: {\n      \"content-type\": \"application/json\",\n      Authorization: `Bearer ${accessToken}`\n    }\n  };\n  const {\n    data,\n    error\n  } = await callExternalApi({\n    config\n  });\n  return {\n    data: data || null,\n    error\n  };\n};\nexport const getAdminResource = async accessToken => {\n  const config = {\n    url: `${apiServerUrl}/api/messages/admin`,\n    method: \"GET\",\n    headers: {\n      \"content-type\": \"application/json\",\n      Authorization: `Bearer ${accessToken}`\n    }\n  };\n  const {\n    data,\n    error\n  } = await callExternalApi({\n    config\n  });\n  return {\n    data: data || null,\n    error\n  };\n};","map":{"version":3,"names":["callExternalApi","apiServerUrl","process","env","REACT_APP_API_SERVER_URL","getPublicResource","config","url","method","headers","data","error","getProtectedResource","accessToken","Authorization","getAdminResource"],"sources":["C:/Users/Leo/Desktop/ProfessorPilot/client/src/services/message.service.js"],"sourcesContent":["import { callExternalApi } from \"./external-api.service\";\n\nconst apiServerUrl = process.env.REACT_APP_API_SERVER_URL;\n\nexport const getPublicResource = async () => {\n  const config = {\n    url: `${apiServerUrl}/api/messages/public`,\n    method: \"GET\",\n    headers: {\n      \"content-type\": \"application/json\",\n    },\n  };\n\n  const { data, error } = await callExternalApi({ config });\n\n  return {\n    data: data || null,\n    error,\n  };\n};\n\nexport const getProtectedResource = async (accessToken) => {\n  const config = {\n    url: `${apiServerUrl}/api/messages/protected`,\n    method: \"GET\",\n    headers: {\n      \"content-type\": \"application/json\",\n      Authorization: `Bearer ${accessToken}`,\n    },\n  };\n\n  const { data, error } = await callExternalApi({ config });\n\n  return {\n    data: data || null,\n    error,\n  };\n};\n\nexport const getAdminResource = async (accessToken) => {\n  const config = {\n    url: `${apiServerUrl}/api/messages/admin`,\n    method: \"GET\",\n    headers: {\n      \"content-type\": \"application/json\",\n      Authorization: `Bearer ${accessToken}`,\n    },\n  };\n\n  const { data, error } = await callExternalApi({ config });\n\n  return {\n    data: data || null,\n    error,\n  };\n};\n"],"mappings":"AAAA,SAASA,eAAe,QAAQ,wBAAwB;AAExD,MAAMC,YAAY,GAAGC,OAAO,CAACC,GAAG,CAACC,wBAAwB;AAEzD,OAAO,MAAMC,iBAAiB,GAAG,MAAAA,CAAA,KAAY;EAC3C,MAAMC,MAAM,GAAG;IACbC,GAAG,EAAG,GAAEN,YAAa,sBAAqB;IAC1CO,MAAM,EAAE,KAAK;IACbC,OAAO,EAAE;MACP,cAAc,EAAE;IAClB;EACF,CAAC;EAED,MAAM;IAAEC,IAAI;IAAEC;EAAM,CAAC,GAAG,MAAMX,eAAe,CAAC;IAAEM;EAAO,CAAC,CAAC;EAEzD,OAAO;IACLI,IAAI,EAAEA,IAAI,IAAI,IAAI;IAClBC;EACF,CAAC;AACH,CAAC;AAED,OAAO,MAAMC,oBAAoB,GAAG,MAAOC,WAAW,IAAK;EACzD,MAAMP,MAAM,GAAG;IACbC,GAAG,EAAG,GAAEN,YAAa,yBAAwB;IAC7CO,MAAM,EAAE,KAAK;IACbC,OAAO,EAAE;MACP,cAAc,EAAE,kBAAkB;MAClCK,aAAa,EAAG,UAASD,WAAY;IACvC;EACF,CAAC;EAED,MAAM;IAAEH,IAAI;IAAEC;EAAM,CAAC,GAAG,MAAMX,eAAe,CAAC;IAAEM;EAAO,CAAC,CAAC;EAEzD,OAAO;IACLI,IAAI,EAAEA,IAAI,IAAI,IAAI;IAClBC;EACF,CAAC;AACH,CAAC;AAED,OAAO,MAAMI,gBAAgB,GAAG,MAAOF,WAAW,IAAK;EACrD,MAAMP,MAAM,GAAG;IACbC,GAAG,EAAG,GAAEN,YAAa,qBAAoB;IACzCO,MAAM,EAAE,KAAK;IACbC,OAAO,EAAE;MACP,cAAc,EAAE,kBAAkB;MAClCK,aAAa,EAAG,UAASD,WAAY;IACvC;EACF,CAAC;EAED,MAAM;IAAEH,IAAI;IAAEC;EAAM,CAAC,GAAG,MAAMX,eAAe,CAAC;IAAEM;EAAO,CAAC,CAAC;EAEzD,OAAO;IACLI,IAAI,EAAEA,IAAI,IAAI,IAAI;IAClBC;EACF,CAAC;AACH,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}